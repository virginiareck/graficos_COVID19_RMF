# -*- coding: utf-8 -*-
"""compilacao_graficos

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ahEimi2reAOuVn2mTrzK_CMFgsXsd3TJ

#Séries temporais

##Importa pacotes necessários
"""

import pandas as pd
import numpy as np
import plotly.express as px
from plotly.subplots import make_subplots
import plotly.graph_objects as go

from statsmodels.tsa.stattools import adfuller
import matplotlib.pyplot as plt
from datetime import datetime as dt
import pytz

#formatação de tabela 
pd.options.display.float_format = '{:.2f}'.format

"""#Lê o csv com os dados direto do repositório github 
#(arquivo extraído do brasil.io contendo *apenas* cidades de SC com dados até 27 de março de 2022)
#E converte a coluna que contém a data do tipo "object" para o tipo "date"
"""

#dateparse=lambda dates:pd.datetime.strftime(dates,'%Y/%m/%d')
cidades_SC = pd.read_csv('https://github.com/virginiareck/Dados-COVID/raw/main/2cidades-RegGrandeFpolis-clear.csv', parse_dates=['date'])
cidades_SC

"""#Exclui algumas colunas desnecessárias com "drop"
#Cria colunas "mês" e "ano" a partir da coluna "data"
"""

cidades_SC.drop(['city_y', 'Unnamed: 0', 'estimated_population_2019','is_last','order_for_place','capital','state','place_type','codigo_uf'], axis = 1)
cidades_SC = cidades_SC.rename(columns={'city_x': 'city'})
cidades_SC['ano'] = cidades_SC['date'].dt.year
cidades_SC['mês'] = cidades_SC['date'].dt.month
cidades_SC

"""#Cria lista com as 4 maiores cidades (em população) da Região Metropolitana de Florianópolis: Biguaçu, Florianópolis, Palhoça e São José"""

lista_cidades_maiores = ['Biguaçu','Florianópolis','Palhoça','São José']

"""#Cria dataframe contendo apenas dos dados dessas 4 cidades"""

df_cidades_maiores = cidades_SC[cidades_SC['city'].isin(lista_cidades_maiores)]
df_cidades_maiores

"""#Filtra dados para 2020 e cria dataframe só com esses dados"""

maiores_cidades_2020 = df_cidades_maiores.query('ano==2020')

maiores_cidades_2020.head()

"""#Filtra dados para 2021 e cria dataframe só com esses dados"""

maiores_cidades_2021 = df_cidades_maiores.query('ano==2021')

maiores_cidades_2021.head()

"""#Filtra dados para 2022 e cria dataframe só com esses dados"""

maiores_cidades_2022 = df_cidades_maiores.query('ano==2022')

maiores_cidades_2022.head()

"""#Agrupa os dados por cidade e mês, no ano 2020"""

maiores_cidades_agrupado_2020 = maiores_cidades_2020.groupby(['city','mês',])['last_available_confirmed','last_available_deaths'].max().reset_index()

maiores_cidades_agrupado_2020

"""#Plota gráfico da série temporal dos novos casos para as 4 cidades"""

from IPython.core.pylabtools import figsize
for city, date in df_cidades_maiores.groupby('city'):
    plt.plot(date['date'], date['new_confirmed'],label=city)

plt.xlabel('data')
plt.ylabel('novos casos')
plt.legend()
plt.show()

from IPython.core.pylabtools import figsize
plt.figure(figsize=(25,15))
for city, date in df_cidades_maiores.groupby('city'):
    plt.plot(date['date'], date['new_confirmed'],label=city)

plt.xlabel('date')
plt.ylabel('new_confirmed')

plt.legend()
plt.show()

"""#Plota gráfico da série temporal dos novos casos para as 4 cidades no ano 2020

"""

from IPython.core.pylabtools import figsize
plt.figure(figsize=(25,15))
for city, date in maiores_cidades_2020.groupby('city'):
    plt.plot(date['date'], date['new_confirmed'],label=city)

plt.xlabel('date')
plt.ylabel('new_confirmed')

plt.legend()
plt.show()

"""#Plota gráfico da série temporal dos novos casos para as 4 cidades no ano 2021

"""

from IPython.core.pylabtools import figsize
plt.figure(figsize=(25,15))
for city, date in maiores_cidades_2021.groupby('city'):
    plt.plot(date['date'], date['new_confirmed'],label=city)

plt.xlabel('date')
plt.ylabel('new_confirmed')

plt.legend()
plt.show()

"""#Plota gráfico da série temporal dos novos casos para as 4 cidades no ano 2022

"""

from IPython.core.pylabtools import figsize
plt.figure(figsize=(25,15))
for city, date in maiores_cidades_2022.groupby('city'):
    plt.plot(date['date'], date['new_confirmed'],label=city)

plt.xlabel('date')
plt.ylabel('new_confirmed')

plt.legend()
plt.show()

"""#Plota gráfico da série temporal dos novos óbitos para as 4 cidades no ano 2020

"""

from IPython.core.pylabtools import figsize
plt.figure(figsize=(25,15))
for city, date in maiores_cidades_2020.groupby('city'):
    plt.plot(date['date'], date['new_deaths'],label=city)

plt.xlabel('date')
plt.ylabel('new_deaths')

plt.legend()
plt.show()

"""#Plota gráfico da série temporal dos novos óbitos para as 4 cidades no ano 2021

"""

from IPython.core.pylabtools import figsize
plt.figure(figsize=(25,15))
for city, date in maiores_cidades_2021.groupby('city'):
    plt.plot(date['date'], date['new_deaths'],label=city)

plt.xlabel('date')
plt.ylabel('new_deaths')

plt.legend()
plt.show()

"""#Plota gráfico da série temporal dos novos óbitos para as 4 cidades no ano 2022

"""

from IPython.core.pylabtools import figsize
plt.figure(figsize=(25,15))
for city, date in maiores_cidades_2022.groupby('city'):
    plt.plot(date['date'], date['new_deaths'],label=city)

plt.xlabel('date')
plt.ylabel('new_deaths')

plt.legend()
plt.show()

"""#Cria 3 dataframes com todas as 9 cidades da RMF e com os dados separados pelo ano"""

cidades_2020 = cidades_SC.query('ano==2020')
cidades_2021 = cidades_SC.query('ano==2021')
cidades_2022 = cidades_SC.query('ano==2022')

"""#Agrupar os valores de casos por cidade, ano e mês e acumulado de casos e acumulado de mortes"""

cidades_2020_agrupado = cidades_2020.groupby(['city','mês',])['last_available_confirmed','last_available_deaths'].max().reset_index()
cidades_2021_agrupado = cidades_2021.groupby(['city','mês',])['last_available_confirmed','last_available_deaths'].max().reset_index()
cidades_2022_agrupado = cidades_2022.groupby(['city','mês',])['last_available_confirmed','last_available_deaths'].max().reset_index()

#cidades_2021_agrupado.head()

"""#Cria gráfico de linha usando a biblioteca plot express

#De toda a RMF para o ano 2020
"""

fig = px.line(cidades_2020, x="date", y="new_confirmed", color="city")
fig.show()

"""#Plota gráfico da série temporal dos novos casos confirmados apenas para as 4 maiores cidades no ano 2020"""

fig = px.line(maiores_cidades_2020, x="date", y="new_confirmed", color="city")
fig.show()

"""#Plota gráfico da série temporal dos novos casos confirmados apenas para as 4 maiores cidades no ano 2021"""

fig = px.line(maiores_cidades_2021, x="date", y="new_confirmed", color="city")
fig.show()

"""#Plota gráfico da série temporal dos novos casos confirmados apenas para as 4 maiores cidades no ano 2022"""

fig = px.line(maiores_cidades_2022, x="date", y="new_confirmed", color="city")
fig.show()

"""#plota a série temporal de novos óbitos por dia, de toda a RMF para o ano 2020"""

fig = px.line(cidades_2020, x="date", y="new_deaths", color="city")
fig.show()

"""#Plota gráfico da série temporal dos novos óbitos confirmados apenas para as 4 maiores cidades no ano 2020"""

fig = px.line(maiores_cidades_2020, x="date", y="new_deaths", color="city")
fig.show()

"""#Plota gráfico da série temporal dos novos óbitos confirmados apenas para as 4 maiores cidades no ano 2021"""

fig = px.line(maiores_cidades_2021, x="date", y="new_deaths", color="city")
fig.show()

"""#Plota gráfico da série temporal dos novos óbitos confirmados apenas para as 4 maiores cidades no ano 2022"""

fig = px.line(maiores_cidades_2022, x="date", y="new_deaths", color="city")
fig.show()

"""#Agrupa por novos casos e novas mortes"""

cidades_2020_agrupado_novos_ano_sum = cidades_2020.groupby(['city','ano',])['new_confirmed','new_deaths'].sum().reset_index()
cidades_2021_agrupado_novos_ano_sum = cidades_2021.groupby(['city','ano',])['new_confirmed','new_deaths'].sum().reset_index()
cidades_2022_agrupado_novos_ano_sum = cidades_2022.groupby(['city','ano',])['new_confirmed','new_deaths'].sum().reset_index()

cidades_2021_agrupado_novos_ano_sum.head()

"""#Gráfico de barras do total de confirmados para as 9 cidades da RMF no ano 2020"""

fig = px.bar(cidades_2020_agrupado,x='mês',y='last_available_confirmed',color='city',barmode='group',title="Número de casos acumulados de COVID-19 na RMF por mês no ano de 2020.",text='last_available_confirmed')
#fig.update_traces(texttemplate='%{text:.2s}',textposition='outside')
fig.update_traces(textposition='outside')
fig.update_xaxes(type='category')
fig.show()

"""#Gráfico de barras do total de confirmados para as 9 cidades da RMF no ano 2021"""

fig = px.bar(cidades_2021_agrupado,x='mês',y='last_available_confirmed',color='city',barmode='group',title="Número de casos acumulados de COVID-19 na RMF por mês no ano de 2021.",text='last_available_confirmed')
#fig.update_traces(texttemplate='%{text:.2s}',textposition='outside')
fig.update_traces(textposition='outside')
fig.update_xaxes(type='category')
fig.show()

"""#Gráfico de barras do total de confirmados para as 9 cidades da RMF no ano 2022"""

fig = px.bar(cidades_2022_agrupado,x='mês',y='last_available_confirmed',color='city',barmode='group',title="Número de casos acumulados de COVID-19 na RMF por mês no ano de 2022.",text='last_available_confirmed')
#fig.update_traces(texttemplate='%{text:.2s}',textposition='outside')
fig.update_traces(textposition='outside')
fig.update_xaxes(type='category')
fig.show()

"""#Gráfico de barras dos novos confirmados para as 9 cidades da RMF no ano 2020"""

fig_2020 = px.bar(cidades_2020_agrupado_novos_ano_sum,x='mês',y='new_confirmed',color='city',barmode='group',title="Número de  novos casos de COVID-19 na RMF por mês no ano de 2020.",text='new_confirmed')
fig_2020.update_traces(textposition='outside')
fig_2020.update_xaxes(type='category')
fig_2020.show()

"""#Gráfico de barras dos novos confirmados para as 9 cidades da RMF no ano 2021"""

cidades_2020_agrupado_novos = cidades_2020.groupby(['city','mês',])['new_confirmed','new_deaths'].sum().reset_index()
cidades_2021_agrupado_novos = cidades_2021.groupby(['city','mês',])['new_confirmed','new_deaths'].sum().reset_index()
cidades_2022_agrupado_novos = cidades_2022.groupby(['city','mês',])['new_confirmed','new_deaths'].sum().reset_index()

fig_2021 = px.bar(cidades_2021_agrupado_novos,x='mês',y='new_confirmed',color='city',barmode='group',title="Número de novos casos de COVID-19 na RMF por mês no ano de 2021.",text='new_confirmed')
fig_2021.update_traces(textposition='outside')
fig_2021.update_xaxes(type='category')
fig_2021.show()

"""#Gráfico de barras dos novos confirmados para as 9 cidades da RMF no ano 2022"""

fig_2022 = px.bar(cidades_2022_agrupado_novos,x='mês',y='new_confirmed',color='city',barmode='group',title="Número de novos casos de COVID-19 na RMF por mês no ano de 2022.",text='new_confirmed')
fig_2022.update_traces(textposition='outside')
fig_2022.update_xaxes(type='category')
fig_2022.show()

"""#Gráfico de barras dos novos óbitos para as 9 cidades da RMF no ano 2020"""

fig_2020_mortes = px.bar(cidades_2020_agrupado_novos,x='mês',y='new_deaths',color='city',barmode='group',title="Número de novos óbitos de COVID-19 na RMF por mês no ano de 2020.",text='new_deaths')
fig_2020_mortes.update_traces(textposition='outside')
fig_2020_mortes.update_xaxes(type='category')
fig_2020_mortes.show()

"""#Gráfico de barras dos novos óbitos para as 9 cidades da RMF no ano 2021"""

fig_2021_mortes = px.bar(cidades_2021_agrupado_novos,x='mês',y='new_deaths',color='city',barmode='group',title="Número de novos óbitos de COVID-19 na RMF por mês no ano de 2021.",text='new_deaths')
fig_2021_mortes.update_traces(textposition='outside')
fig_2021_mortes.update_xaxes(type='category')
fig_2021_mortes.show()

"""#Gráfico de barras dos novos óbitos para as 9 cidades da RMF no ano 2022"""

fig_2022_mortes = px.bar(cidades_2022_agrupado_novos,x='mês',y='new_deaths',color='city',barmode='group',title="Número de novos óbitos de COVID-19 na RMF por mês no ano de 2022.",text='new_deaths')
fig_2022_mortes.update_traces(textposition='outside')
fig_2022_mortes.update_xaxes(type='category')
fig_2022_mortes.show()

"""#Gráfico de barras dos novos óbitos para as 9 cidades da RMF no ano 2020"""

fig_2020_mortes_ano = px.bar(cidades_2020_agrupado_novos_ano_sum,x='ano',y='new_deaths',color='city',barmode='group',title="Número de novos óbitos de COVID-19 na RMF no ano de 2020 por cidade.",text='new_deaths')
fig_2020_mortes_ano.update_traces(textposition='outside')
fig_2020_mortes_ano.update_xaxes(type='category')
fig_2020_mortes_ano.show()

fig_2021_mortes_ano = px.bar(cidades_2021_agrupado_novos_ano_sum,x='ano',y='new_deaths',color='city',barmode='group',title="Número de novos óbitos de COVID-19 na RMF no ano de 2021 por cidade.",text='new_deaths')
fig_2021_mortes_ano.update_traces(textposition='outside')
fig_2021_mortes_ano.update_xaxes(type='category')
fig_2021_mortes_ano.show()

fig_2022_mortes_ano = px.bar(cidades_2022_agrupado_novos_ano_sum,x='ano',y='new_deaths',color='city',barmode='group',title="Número de novos óbitos de COVID-19 na RMF no ano de 2022 por cidade.",text='new_deaths')
fig_2022_mortes_ano.update_traces(textposition='outside')
fig_2022_mortes_ano.update_xaxes(type='category')
fig_2022_mortes_ano.show()

cidades_SC_agrupado = cidades_SC.groupby(['city','ano'])['last_available_confirmed','last_available_deaths','new_confirmed','new_deaths'].sum().reset_index()

cidades_SC_agrupado

figTeste = px.bar(cidades_SC_agrupado,x='ano',y='new_deaths',color='city',barmode='group',title="Número de novos óbitos de COVID-19 na RMF por ano.",text='new_deaths')
figTeste.update_traces(textposition='outside')
figTeste.update_xaxes(type='category')
figTeste.show()

from IPython.core.pylabtools import figsize
plt.style.use('ggplot')
plt.figure(figsize=(25,15))
for city, date in cidades_SC_agrupado.groupby('city'):
    plt.barh(date['ano'], date['new_deaths'],label=city)
plt.tight_layout()
plt.title('Número de novos óbitos de COVID-19 na RMF por ano.', fontsize=28,fontweight='bold')
plt.xlabel('Novos óbitos',fontsize=20)
plt.ylabel('Ano',fontsize=20)
plt.tick_params(labelsize=20)

plt.legend(fontsize=20, frameon=True, framealpha=0.5, facecolor='white')
plt.show()

from IPython.core.pylabtools import figsize
plt.style.use('ggplot')
plt.figure(figsize=(25,15))
barwidth=0.25
for city, date in cidades_SC_agrupado.groupby('city'):
    plt.barh(date['ano'], date['new_deaths'],label=city)
plt.tight_layout()
plt.title('Número de novos óbitos de COVID-19 na RMF por ano.', fontsize=28,fontweight='bold')
plt.xlabel('Novos óbitos',fontsize=20)
plt.ylabel('Ano',fontsize=20)
plt.tick_params(labelsize=20)

plt.legend(fontsize=20, frameon=True, framealpha=0.5, facecolor='white')
plt.show()

from IPython.core.pylabtools import figsize
plt.style.use('ggplot')
fig=plt.figure(figsize=(25,15))
ax = fig.add_axes([0,0,1,1])
for city, date in cidades_SC_agrupado.groupby('city'):
    ax.bar(date['ano'], date['new_deaths'],label=city)
plt.tight_layout()
plt.title('Número de novos óbitos de COVID-19 na RMF por ano.', fontsize=28,fontweight='bold')
plt.xlabel('Ano',fontsize=20)
plt.ylabel('Novos óbitos',fontsize=20)
#plt.tick_params(labelsize=20)

plt.legend(fontsize=20, frameon=True, framealpha=0.5, facecolor='white')
plt.show()

fig = go.Figure()
fig = px.bar(cidades_SC_agrupado,x='ano',y='new_confirmed',color='city',barmode='group',title="Número de novos casos confirmados de COVID-19 na RMF por ano.",text='new_confirmed')
fig.update_traces(textposition='outside')
fig.update_xaxes(type='category')
fig.update_layout(
    margin=dict(
        l=50,
        r=50,
        b=100,
        t=100,
        pad=4
    ),
    title_text="Número de novos casos de COVID-19 na RMF por ano", title_x=0.5,
    #title="Número de novos óbitos de COVID-19 na RMF por ano",
    xaxis_title="Ano",
    yaxis_title="Novos casos",
    legend_title="Cidades",
    font=dict(
        #family="Courier New, monospace",
        size=26,
        color="#030502"
    )
)
#tickfont = dict(size=20)))
fig.show()

figTeste = px.bar(cidades_SC_agrupado,x='ano',y='new_deaths',color='city',barmode='group',title="Número de novos óbitos de COVID-19 na RMF por ano.",text='new_deaths')
figTeste.update_traces(textposition='outside')
figTeste.update_xaxes(type='category')
figTeste.show()

fig = go.Figure()
fig = px.bar(cidades_SC_agrupado,x='ano',y='new_deaths',color='city',barmode='group',text='new_deaths')
fig.update_traces(textposition='outside')
fig.update_xaxes(type='category')
fig.update_layout(
    margin=dict(
        l=50,
        r=50,
        b=100,
        t=100,
        pad=4
    ),
    title_text="Número total óbitos de COVID-19 na RMF por ano", title_x=0.5,
    #title="Número de novos óbitos de COVID-19 na RMF por ano",
    xaxis_title="Ano",
    yaxis_title="Total óbitos",
    legend_title="Cidades",
    font=dict(
        #family="Courier New, monospace",
        size=26,
        color="#030502"
    )
)
#tickfont = dict(size=20)))
fig.show()

fig = px.bar(cidades_SC_agrupado,x='ano',y='new_confirmed',color='city',barmode='group',title="Número de novos casos confirmados de COVID-19 na RMF por ano.",text='new_confirmed')
fig.update_traces(textposition='outside')
fig.update_xaxes(type='category')
fig.update_layout(
    title="Plot Title",
    xaxis_title="X Axis Title",
    yaxis_title="Y Axis Title",
    legend_title="Legend Title",
    font=dict(
        #family="Courier New, monospace",
        size=18,
        color="RebeccaPurple"
    )
)
#tickfont = dict(size=20)))
fig.show()



"""#Agrupa os casos por ano e por mês, somando todos os novos confirmados."""

fig = px.bar(cidades_2021_agrupado_novos,x='mês',y='new_confirmed',color='city',barmode='group',title="Número de novos casos confirmados de COVID-19 na RMF no ano de 2021.",text='new_confirmed')
fig.update_traces(textposition='outside')
fig.update_xaxes(type='category')
fig.show()

fig = go.Figure()
fig = px.bar(cidades_2021_agrupado_novos,x='mês',y='new_confirmed',color='city',barmode='group',text='new_confirmed')
fig.update_traces(textposition='outside')
fig.update_xaxes(type='category')
fig.update_layout(
    title_text="Número de novos casos de COVID-19 na RMF no ano de 2021", title_x=0.5,
    #title="Número de novos óbitos de COVID-19 na RMF por ano",
    xaxis_title="Mês",
    yaxis_title="Novos casos",
    legend_title="Cidades",
    font=dict(
        #family="Courier New, monospace",
        size=26,
        color="#030502"
    )
)
#tickfont = dict(size=20)))
fig.show()

fig = go.Figure()
fig = px.bar(cidades_2021_agrupado_novos,x='mês',y='new_deaths',color='city',barmode='group',text='new_deaths')
fig.update_traces(textposition='outside')
fig.update_xaxes(type='category')
fig.update_layout(
    title_text="Número de novos óbitos de COVID-19 na RMF no ano de 2021", title_x=0.5,
    #title="Número de novos óbitos de COVID-19 na RMF por ano",
    xaxis_title="Mês",
    yaxis_title="Novos óbitos",
    legend_title="Cidades",
    font=dict(
        #family="Courier New, monospace",
        size=26,
        color="#030502"
    )
)
#tickfont = dict(size=20)))
fig.show()